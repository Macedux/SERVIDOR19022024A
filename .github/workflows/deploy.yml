name: Deploy to Remote Server

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # Iniciar sesión en DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Construir y subir la imagen de la aplicación
      - name: Build and push PHP Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/calculadora:v1 .
          docker push ${{ secrets.DOCKER_USERNAME }}/calculadora:v1

      # Asegurarse de que el directorio de despliegue exista
      - name: Ensure deploy directory exists
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_KEY }}
          script: |
            mkdir -p ~/deploy

      # Transferir el archivo docker-compose.yaml al servidor remoto
      - name: Transfer docker-compose.yaml to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_KEY }}
          source: ./docker-compose.yaml  # Asegúrate de que apunta al archivo correcto
          target: ~/deploy/ # Ruta de destino

      # Verificar la transferencia del archivo
      - name: Verify transfer of docker-compose.yaml
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_KEY }}
          script: |
            ls -la ~/deploy  # Listar el contenido del directorio para confirmar que el archivo está allí
            if [ ! -f ~/deploy/docker-compose.yaml ]; then
              echo "docker-compose.yaml no es un archivo!"
              exit 1
            fi

      # Instalar Docker Compose en el servidor remoto (si es necesario)
      - name: Install Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_KEY }}
          script: |
            if ! [ -x "$(command -v docker-compose)" ]; then
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

      # Verificar la versión de Docker y Docker Compose
      - name: Check Docker and Docker Compose version
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_KEY }}
          script: |
            docker --version
            docker-compose --version

      # Desplegar la aplicación en el servidor remoto usando docker-compose
      - name: Deploy with Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_KEY }}
          script: |
            cd ~/deploy
            sudo chmod 666 /var/run/docker.sock
            docker-compose -f docker-compose.yaml down || true
            docker-compose -f docker-compose.yaml pull
            docker-compose -f docker-compose.yaml up -d
